{"ast":null,"code":"var _jsxFileName = \"/Users/sergej/pairs-game/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Tile from './Tile';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTile, resetGame } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const tiles = useSelector(state => state.tiles);\n  const dispatch = useDispatch();\n  console.log('Текущие плитки:', tiles);\n  const handleTileClick = id => {\n    dispatch(selectTile(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [tiles.map(tile => /*#__PURE__*/_jsxDEV(Tile, {\n      id: tile.id,\n      isOpen: tile.isOpen,\n      onClick: handleTileClick\n    }, tile.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(resetGame()),\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"Q64deuNXarsb6pCbXX0N3FQX698=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Board;\nexport default Board;\n\n// import React from 'react';\n// import Tile from './Tile';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { selectTile, resetGame } from '../redux/actions';\n\n// const Board = () => {\n//     const tiles = useSelector(state => state.tiles);\n//     const dispatch = useDispatch();\n\n//     const handleTileClick = (id) => {\n//         dispatch(selectTile(id));\n//     };\n\n//     return (\n//         <div className=\"board\">\n//             {tiles.map(tile => (\n//                 <Tile\n//                     key={tile.id}\n//                     id={tile.id}\n//                     isOpen={tile.isOpen}\n//                     onClick={handleTileClick}\n//                 />\n//             ))}\n//             <button onClick={() => dispatch(resetGame())}>Reset Game</button>\n//         </div>\n//     );\n// };\n\n// export default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Tile","useSelector","useDispatch","selectTile","resetGame","jsxDEV","_jsxDEV","Board","_s","tiles","state","dispatch","console","log","handleTileClick","id","className","children","map","tile","isOpen","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sergej/pairs-game/src/components/Board.js"],"sourcesContent":["import React from 'react';\nimport Tile from './Tile';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTile, resetGame } from '../redux/actions';\n\nconst Board = () => {\n    const tiles = useSelector(state => state.tiles);\n    const dispatch = useDispatch();\n    console.log('Текущие плитки:', tiles);\n\n    const handleTileClick = (id) => {\n        dispatch(selectTile(id));\n    };\n\n    return (\n        <div className=\"board\">\n            {tiles.map(tile => (\n                <Tile\n                    key={tile.id}\n                    id={tile.id}\n                    isOpen={tile.isOpen}\n                    onClick={handleTileClick}\n                />\n            ))}\n            <button onClick={() => dispatch(resetGame())}>Reset Game</button>\n            \n        </div>\n        \n    );\n};\n\nexport default Board;\n\n// import React from 'react';\n// import Tile from './Tile';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { selectTile, resetGame } from '../redux/actions';\n\n// const Board = () => {\n//     const tiles = useSelector(state => state.tiles);\n//     const dispatch = useDispatch();\n\n//     const handleTileClick = (id) => {\n//         dispatch(selectTile(id));\n//     };\n\n//     return (\n//         <div className=\"board\">\n//             {tiles.map(tile => (\n//                 <Tile\n//                     key={tile.id}\n//                     id={tile.id}\n//                     isOpen={tile.isOpen}\n//                     onClick={handleTileClick}\n//                 />\n//             ))}\n//             <button onClick={() => dispatch(resetGame())}>Reset Game</button>\n//         </div>\n//     );\n// };\n\n// export default Board;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAC/C,MAAME,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9BU,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,KAAK,CAAC;EAErC,MAAMK,eAAe,GAAIC,EAAE,IAAK;IAC5BJ,QAAQ,CAACR,UAAU,CAACY,EAAE,CAAC,CAAC;EAC5B,CAAC;EAED,oBACIT,OAAA;IAAKU,SAAS,EAAC,OAAO;IAAAC,QAAA,GACjBR,KAAK,CAACS,GAAG,CAACC,IAAI,iBACXb,OAAA,CAACN,IAAI;MAEDe,EAAE,EAAEI,IAAI,CAACJ,EAAG;MACZK,MAAM,EAAED,IAAI,CAACC,MAAO;MACpBC,OAAO,EAAEP;IAAgB,GAHpBK,IAAI,CAACJ,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACJ,CAAC,eACFnB,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACP,SAAS,CAAC,CAAC,CAAE;MAAAa,QAAA,EAAC;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhE,CAAC;AAGd,CAAC;AAACjB,EAAA,CAxBID,KAAK;EAAA,QACON,WAAW,EACRC,WAAW;AAAA;AAAAwB,EAAA,GAF1BnB,KAAK;AA0BX,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}