{"ast":null,"code":"import { SELECT_TILE, RESET_GAME } from './actions';\nconst initialState = {\n  tiles: Array.from({\n    length: 16\n  }, (_, index) => ({\n    id: index,\n    isOpen: false,\n    color: Math.floor(index / 2) // Упрощенная логика для создания пар\n  })),\n  firstSelected: null\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_TILE:\n      // Логика выбора плитки\n      return state;\n    // Обновите состояние\n    case RESET_GAME:\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["SELECT_TILE","RESET_GAME","initialState","tiles","Array","from","length","_","index","id","isOpen","color","Math","floor","firstSelected","reducer","state","action","type"],"sources":["/Users/sergej/pairs-game/src/redux/reducer.js"],"sourcesContent":["import { SELECT_TILE, RESET_GAME } from './actions';\n\nconst initialState = {\n    tiles: Array.from({ length: 16 }, (_, index) => ({\n        id: index,\n        isOpen: false,\n        color: Math.floor(index / 2) // Упрощенная логика для создания пар\n    })),\n    firstSelected: null,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SELECT_TILE:\n            // Логика выбора плитки\n            return state; // Обновите состояние\n        case RESET_GAME:\n            return initialState;\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,WAAW;AAEnD,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;IAC7CC,EAAE,EAAED,KAAK;IACTE,MAAM,EAAE,KAAK;IACbC,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACL,KAAK,GAAG,CAAC,CAAC,CAAC;EACjC,CAAC,CAAC,CAAC;EACHM,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGd,YAAY,EAAEe,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKlB,WAAW;MACZ;MACA,OAAOgB,KAAK;IAAE;IAClB,KAAKf,UAAU;MACX,OAAOC,YAAY;IACvB;MACI,OAAOc,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}