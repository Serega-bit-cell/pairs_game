{"ast":null,"code":"import { SELECT_TILE, RESET_GAME } from './actions';\n\n// Функция для создания плиток с парными числами от 1 до 8\nconst createTiles = () => {\n  // Создаем уникальные номера от 0 до 7 (всего 8 чисел)\n  const numbers = Array.from({\n    length: 8\n  }, (_, index) => index); // [0, 1, 2, 3, 4, 5, 6, 7]\n\n  // Удваиваем массив для создания пар\n  const tiles = [...numbers, ...numbers].map((number, index) => ({\n    id: index,\n    // Используем уникальный идентификатор\n    isOpen: false,\n    number: number\n  }));\n\n  // Перемешиваем массив плиток\n  return tiles.sort(() => Math.random() - 0.5); // Перемешиваем\n};\nconst initialState = {\n  tiles: createTiles() // Ваша функция для создания плиток\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SELECT_TILE':\n      return {\n        ...state,\n        tiles: state.tiles.map(tile => tile.id === action.payload.id ? {\n          ...tile,\n          isOpen: !tile.isOpen\n        } : tile)\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["SELECT_TILE","RESET_GAME","createTiles","numbers","Array","from","length","_","index","tiles","map","number","id","isOpen","sort","Math","random","initialState","reducer","state","action","type","tile","payload"],"sources":["/Users/sergej/pairs-game/src/redux/reducer.js"],"sourcesContent":["import { SELECT_TILE, RESET_GAME } from './actions';\n\n// Функция для создания плиток с парными числами от 1 до 8\nconst createTiles = () => {\n    // Создаем уникальные номера от 0 до 7 (всего 8 чисел)\n    const numbers = Array.from({ length: 8 }, (_, index) => index); // [0, 1, 2, 3, 4, 5, 6, 7]\n\n    // Удваиваем массив для создания пар\n    const tiles = [...numbers, ...numbers].map((number, index) => ({\n        id: index, // Используем уникальный идентификатор\n        isOpen: false,\n        number: number,\n    }));\n\n    // Перемешиваем массив плиток\n    return tiles.sort(() => Math.random() - 0.5); // Перемешиваем\n};\n\nconst initialState = {\n    tiles: createTiles(), // Ваша функция для создания плиток\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SELECT_TILE':\n            return {\n                ...state,\n                tiles: state.tiles.map(tile =>\n                    tile.id === action.payload.id ? { ...tile, isOpen: !tile.isOpen } : tile\n                ),\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,WAAW;;AAEnD;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB;EACA,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,CAAC,CAAC,CAAC;;EAEhE;EACA,MAAMC,KAAK,GAAG,CAAC,GAAGN,OAAO,EAAE,GAAGA,OAAO,CAAC,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEH,KAAK,MAAM;IAC3DI,EAAE,EAAEJ,KAAK;IAAE;IACXK,MAAM,EAAE,KAAK;IACbF,MAAM,EAAEA;EACZ,CAAC,CAAC,CAAC;;EAEH;EACA,OAAOF,KAAK,CAACK,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAClD,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBR,KAAK,EAAEP,WAAW,CAAC,CAAC,CAAE;AAC1B,CAAC;AAED,MAAMgB,OAAO,GAAGA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MACd,OAAO;QACH,GAAGF,KAAK;QACRV,KAAK,EAAEU,KAAK,CAACV,KAAK,CAACC,GAAG,CAACY,IAAI,IACvBA,IAAI,CAACV,EAAE,KAAKQ,MAAM,CAACG,OAAO,CAACX,EAAE,GAAG;UAAE,GAAGU,IAAI;UAAET,MAAM,EAAE,CAACS,IAAI,CAACT;QAAO,CAAC,GAAGS,IACxE;MACJ,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}