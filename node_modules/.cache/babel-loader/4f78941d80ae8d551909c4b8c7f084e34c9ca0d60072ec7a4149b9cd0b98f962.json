{"ast":null,"code":"import { SELECT_TILE, RESET_GAME } from './actions';\n\n// Функция для создания плиток с парными числами от 1 до 8\nconst createTiles = () => {\n  // Создаем уникальные номера от 0 до 7 (всего 8 чисел)\n  const numbers = Array.from({\n    length: 8\n  }, (_, index) => index); // [0, 1, 2, 3, 4, 5, 6, 7]\n\n  // Удваиваем массив для создания пар\n  const tiles = [...numbers, ...numbers].map((number, index) => ({\n    id: index,\n    // Используем уникальный идентификатор\n    isOpen: false,\n    number: number\n  }));\n\n  // Перемешиваем массив плиток\n  return tiles.sort(() => Math.random() - 0.5); // Перемешиваем\n};\nconst initialState = {\n  tiles: createTiles() // Ваша функция для создания плиток\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_TILE:\n      const selectedTile = state.tiles.find(tile => tile.id === action.payload);\n      if (!state.firstSelected) {\n        return {\n          ...state,\n          firstSelected: selectedTile,\n          tiles: state.tiles.map(tile => tile.id === selectedTile.id ? {\n            ...tile,\n            isOpen: true\n          } : tile)\n        };\n      } else if (!state.secondSelected && state.firstSelected.id !== selectedTile.id) {\n        return {\n          ...state,\n          secondSelected: selectedTile,\n          tiles: state.tiles.map(tile => tile.id === selectedTile.id ? {\n            ...tile,\n            isOpen: true\n          } : tile)\n        };\n      }\n      if (state.firstSelected && state.secondSelected) {\n        const isMatch = state.firstSelected.number === state.secondSelected.number;\n        const updatedTiles = state.tiles.map(tile => {\n          if (tile.id === state.firstSelected.id || tile.id === state.secondSelected.id) {\n            return isMatch ? {\n              ...tile,\n              isOpen: true\n            } : {\n              ...tile,\n              isOpen: false\n            };\n          }\n          return tile;\n        });\n        return {\n          ...state,\n          tiles: updatedTiles,\n          firstSelected: isMatch ? null : state.firstSelected,\n          secondSelected: null\n        };\n      }\n      return state;\n    case RESET_GAME:\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["SELECT_TILE","RESET_GAME","createTiles","numbers","Array","from","length","_","index","tiles","map","number","id","isOpen","sort","Math","random","initialState","reducer","state","action","type","selectedTile","find","tile","payload","firstSelected","secondSelected","isMatch","updatedTiles"],"sources":["/Users/sergej/pairs-game/src/redux/reducer.js"],"sourcesContent":["import { SELECT_TILE, RESET_GAME } from './actions';\n\n// Функция для создания плиток с парными числами от 1 до 8\nconst createTiles = () => {\n    // Создаем уникальные номера от 0 до 7 (всего 8 чисел)\n    const numbers = Array.from({ length: 8 }, (_, index) => index); // [0, 1, 2, 3, 4, 5, 6, 7]\n\n    // Удваиваем массив для создания пар\n    const tiles = [...numbers, ...numbers].map((number, index) => ({\n        id: index, // Используем уникальный идентификатор\n        isOpen: false,\n        number: number,\n    }));\n\n    // Перемешиваем массив плиток\n    return tiles.sort(() => Math.random() - 0.5); // Перемешиваем\n};\n\nconst initialState = {\n    tiles: createTiles(), // Ваша функция для создания плиток\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SELECT_TILE:\n            const selectedTile = state.tiles.find(tile => tile.id === action.payload);\n\n            if (!state.firstSelected) {\n                return {\n                    ...state,\n                    firstSelected: selectedTile,\n                    tiles: state.tiles.map(tile =>\n                        tile.id === selectedTile.id ? { ...tile, isOpen: true } : tile\n                    ),\n                };\n            } else if (!state.secondSelected && state.firstSelected.id !== selectedTile.id) {\n                return {\n                    ...state,\n                    secondSelected: selectedTile,\n                    tiles: state.tiles.map(tile =>\n                        tile.id === selectedTile.id ? { ...tile, isOpen: true } : tile\n                    ),\n                };\n            }\n\n            if (state.firstSelected && state.secondSelected) {\n                const isMatch = state.firstSelected.number === state.secondSelected.number;\n\n                const updatedTiles = state.tiles.map(tile => {\n                    if (tile.id === state.firstSelected.id || tile.id === state.secondSelected.id) {\n                        return isMatch ? { ...tile, isOpen: true } : { ...tile, isOpen: false };\n                    }\n                    return tile;\n                });\n\n                return {\n                    ...state,\n                    tiles: updatedTiles,\n                    firstSelected: isMatch ? null : state.firstSelected,\n                    secondSelected: null,\n                };\n            }\n\n            return state;\n\n        case RESET_GAME:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,WAAW;;AAEnD;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB;EACA,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,CAAC,CAAC,CAAC;;EAEhE;EACA,MAAMC,KAAK,GAAG,CAAC,GAAGN,OAAO,EAAE,GAAGA,OAAO,CAAC,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEH,KAAK,MAAM;IAC3DI,EAAE,EAAEJ,KAAK;IAAE;IACXK,MAAM,EAAE,KAAK;IACbF,MAAM,EAAEA;EACZ,CAAC,CAAC,CAAC;;EAEH;EACA,OAAOF,KAAK,CAACK,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAClD,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBR,KAAK,EAAEP,WAAW,CAAC,CAAC,CAAE;AAC1B,CAAC;AAED,MAAMgB,OAAO,GAAGA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKrB,WAAW;MACZ,MAAMsB,YAAY,GAAGH,KAAK,CAACV,KAAK,CAACc,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACZ,EAAE,KAAKQ,MAAM,CAACK,OAAO,CAAC;MAEzE,IAAI,CAACN,KAAK,CAACO,aAAa,EAAE;QACtB,OAAO;UACH,GAAGP,KAAK;UACRO,aAAa,EAAEJ,YAAY;UAC3Bb,KAAK,EAAEU,KAAK,CAACV,KAAK,CAACC,GAAG,CAACc,IAAI,IACvBA,IAAI,CAACZ,EAAE,KAAKU,YAAY,CAACV,EAAE,GAAG;YAAE,GAAGY,IAAI;YAAEX,MAAM,EAAE;UAAK,CAAC,GAAGW,IAC9D;QACJ,CAAC;MACL,CAAC,MAAM,IAAI,CAACL,KAAK,CAACQ,cAAc,IAAIR,KAAK,CAACO,aAAa,CAACd,EAAE,KAAKU,YAAY,CAACV,EAAE,EAAE;QAC5E,OAAO;UACH,GAAGO,KAAK;UACRQ,cAAc,EAAEL,YAAY;UAC5Bb,KAAK,EAAEU,KAAK,CAACV,KAAK,CAACC,GAAG,CAACc,IAAI,IACvBA,IAAI,CAACZ,EAAE,KAAKU,YAAY,CAACV,EAAE,GAAG;YAAE,GAAGY,IAAI;YAAEX,MAAM,EAAE;UAAK,CAAC,GAAGW,IAC9D;QACJ,CAAC;MACL;MAEA,IAAIL,KAAK,CAACO,aAAa,IAAIP,KAAK,CAACQ,cAAc,EAAE;QAC7C,MAAMC,OAAO,GAAGT,KAAK,CAACO,aAAa,CAACf,MAAM,KAAKQ,KAAK,CAACQ,cAAc,CAAChB,MAAM;QAE1E,MAAMkB,YAAY,GAAGV,KAAK,CAACV,KAAK,CAACC,GAAG,CAACc,IAAI,IAAI;UACzC,IAAIA,IAAI,CAACZ,EAAE,KAAKO,KAAK,CAACO,aAAa,CAACd,EAAE,IAAIY,IAAI,CAACZ,EAAE,KAAKO,KAAK,CAACQ,cAAc,CAACf,EAAE,EAAE;YAC3E,OAAOgB,OAAO,GAAG;cAAE,GAAGJ,IAAI;cAAEX,MAAM,EAAE;YAAK,CAAC,GAAG;cAAE,GAAGW,IAAI;cAAEX,MAAM,EAAE;YAAM,CAAC;UAC3E;UACA,OAAOW,IAAI;QACf,CAAC,CAAC;QAEF,OAAO;UACH,GAAGL,KAAK;UACRV,KAAK,EAAEoB,YAAY;UACnBH,aAAa,EAAEE,OAAO,GAAG,IAAI,GAAGT,KAAK,CAACO,aAAa;UACnDC,cAAc,EAAE;QACpB,CAAC;MACL;MAEA,OAAOR,KAAK;IAEhB,KAAKlB,UAAU;MACX,OAAOgB,YAAY;IAEvB;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}