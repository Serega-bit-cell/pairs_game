{"ast":null,"code":"var _jsxFileName = \"/Users/sergej/pairs-game/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Tile from './Tile';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTile } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const tiles = useSelector(state => state.tiles); // Получаем список плиток из состояния\n  const dispatch = useDispatch(); // Получаем диспетчер\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: tiles.map(tile => /*#__PURE__*/_jsxDEV(Tile, {\n      number: tile.number,\n      isOpen: tile.isOpen,\n      onClick: () => dispatch(selectTile(tile.id))\n    }, tile.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"Q64deuNXarsb6pCbXX0N3FQX698=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Board;\nexport default Board;\n// import React from 'react';\n// import Tile from './Tile';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { selectTile, resetGame } from '../redux/actions';\n\n// const Board = () => {\n//     const tiles = useSelector(state => state.tiles);\n//     const dispatch = useDispatch();\n\n//     const handleTileClick = (id) => {\n//         dispatch(selectTile(id));\n//     };\n\n//     return (\n//         <div className=\"board\">\n//             {tiles.map(tile => (\n//                 <Tile\n//                     key={tile.id}\n//                     id={tile.id}\n//                     isOpen={tile.isOpen}\n//                     onClick={handleTileClick}\n//                 />\n//             ))}\n//             <button onClick={() => dispatch(resetGame())}>Reset Game</button>\n//         </div>\n//     );\n// };\n\n// export default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Tile","useDispatch","useSelector","selectTile","jsxDEV","_jsxDEV","Board","_s","tiles","state","dispatch","className","children","map","tile","number","isOpen","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sergej/pairs-game/src/components/Board.js"],"sourcesContent":["import React from 'react';\nimport Tile from './Tile';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTile } from '../redux/actions';\n\nconst Board = () => {\n    const tiles = useSelector(state => state.tiles); // Получаем список плиток из состояния\n    const dispatch = useDispatch(); // Получаем диспетчер\n\n    return (\n        <div className=\"board\">\n            {tiles.map(tile => (\n                <Tile\n                    key={tile.id}\n                    number={tile.number}\n                    isOpen={tile.isOpen}\n                    onClick={() => dispatch(selectTile(tile.id))}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Board;\n// import React from 'react';\n// import Tile from './Tile';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { selectTile, resetGame } from '../redux/actions';\n\n// const Board = () => {\n//     const tiles = useSelector(state => state.tiles);\n//     const dispatch = useDispatch();\n\n//     const handleTileClick = (id) => {\n//         dispatch(selectTile(id));\n//     };\n\n//     return (\n//         <div className=\"board\">\n//             {tiles.map(tile => (\n//                 <Tile\n//                     key={tile.id}\n//                     id={tile.id}\n//                     isOpen={tile.isOpen}\n//                     onClick={handleTileClick}\n//                 />\n//             ))}\n//             <button onClick={() => dispatch(resetGame())}>Reset Game</button>\n//         </div>\n//     );\n// };\n\n// export default Board;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC,CAAC,CAAC;EACjD,MAAME,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,oBACII,OAAA;IAAKM,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBJ,KAAK,CAACK,GAAG,CAACC,IAAI,iBACXT,OAAA,CAACL,IAAI;MAEDe,MAAM,EAAED,IAAI,CAACC,MAAO;MACpBC,MAAM,EAAEF,IAAI,CAACE,MAAO;MACpBC,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAACP,UAAU,CAACW,IAAI,CAACI,EAAE,CAAC;IAAE,GAHxCJ,IAAI,CAACI,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACf,EAAA,CAhBID,KAAK;EAAA,QACOJ,WAAW,EACRD,WAAW;AAAA;AAAAsB,EAAA,GAF1BjB,KAAK;AAkBX,eAAeA,KAAK;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}